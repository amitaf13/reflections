How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Comparing codes makes easy to find the issue

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Can help to find any change performed on code in case was needed on the future

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    When the versions automatically are saved you do not worry about this issue, because when it is manually and you forget and you do an important changes and do not save, almost all the work is lost
	but if you performed manually, the version control will have more sense when you come back on history and wants to verify any code.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because sometimes files are related each other and when is done a change can be affected not
	only 1 file, others too, performed commit fix issue about sync changes in all files.

How can you use the commands git log and git diff to view the history of files?

    With git log you can see the commits done and with the git diff you can compare between
	versions to find some mistakes done during the programation process, verify the history and performed corrections
	like have a backup.

How might using version control make you more confident to make changes that
could break something?

    Having backup of a previous version of code is better to take risk about performed changes on code

Now that you have your workspace set up, what do you want to try using Git for?

    I want to try to create a repository and do changes and try return them, add some bug to check how it works.